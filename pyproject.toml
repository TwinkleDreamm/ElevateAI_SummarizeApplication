[project]
name = "elevateai"
version = "1.0.0"
description = "AI-powered video and text summarization application"
authors = [
    {name = "ElevateAI Team", email = "team@elevateai.com"}
]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    # Core dependencies
    "streamlit>=1.28.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    "openai>=1.0.0",
    
    # Audio/Video processing
    "moviepy>=1.0.3",
    "ffmpeg-python>=0.2.0",
    "openai-whisper>=20231117",
    "noisereduce>=3.0.0",
    "librosa>=0.10.0",
    "soundfile>=0.12.1",
    
    # Text processing
    "spacy>=3.7.0",
    "nltk>=3.8.1",
    "pdfplumber>=0.10.0",
    "python-docx>=1.1.0",
    "beautifulsoup4>=4.12.0",
    "newspaper3k>=0.2.8",
    "language-tool-python>=2.7.1",
    
    # Vector database and embeddings
    "faiss-cpu>=1.7.4",
    "sentence-transformers>=2.2.2",
    "chromadb>=0.4.0",
    
    # Web scraping and search
    "requests>=2.31.0",
    "google-search-results>=2.4.2",
    "selenium>=4.15.0",
    
    # Utilities
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    "tqdm>=4.66.0",
    "numpy>=1.24.0",
    "pandas>=2.1.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    
    # Testing
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["elevateai"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
